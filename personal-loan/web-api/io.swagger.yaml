swagger: "2.0"
info:
  description: "simpe loan api definition"
  version: "1.0.0"
  title: "Personal Loan"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "eureka.gh@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "personalloan.swagger.io"
basePath: "/v1"
tags:
- name: "loan"
  description: "Loan application"
- name: "user"
  description: "user identity"
schemes:
- "https"
- "http"
paths:
  /user/{userId}/loan:
    get:
      tags:
      - "user"
      summary: "get all loans"
      description: ""
      operationId: "getUserLoans"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Loans"
        400:
          description: "Invalid ID supplied"
        404:
          description: "loan not found"
      security:
      - api_key: []
  /loan:
    post:
      tags:
      - "loan"
      summary: "apply new loan"
      description: ""
      operationId: "addLoan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Loan"
      responses:
        405:
          description: "Invalid input"
      security:
      - aad_auth:
        - "write:pets"
        - "read:pets"
    put:
      tags:
      - "loan"
      summary: "Update an existing pet"
      description: ""
      operationId: "updateLoan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Loan"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
      - aad_auth:
        - "write:pets"
        - "read:pets"
  /loan/{loanId}:
    get:
      tags:
      - "loan"
      summary: "Find loan by ID"
      description: "Returns a loan info"
      operationId: "getLoanById"
      produces:
      - "application/json"
      parameters:
      - name: "loanId"
        in: "path"
        description: "ID of loan to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Loan"
        400:
          description: "Invalid ID supplied"
        404:
          description: "loan not found"
      security:
      - api_key: []
    post:
      tags:
      - "loan"
      summary: "Updates a loan in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "loanId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the pet"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the pet"
        required: false
        type: "string"
      responses:
        405:
          description: "Invalid input"
      security:
      - aad_auth:
        - "write:pets"
        - "read:pets"
securityDefinitions:
  aad_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Loan:
    type: "object"
    properties:
      id:
        type: "string"
      balance:
        type: "integer"
        format: "int32"
  Loans:
    type: "array"
    items:
     $ref: "#/definitions/Loan"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"